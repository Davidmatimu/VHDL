$date
  Thu Apr 23 09:55:43 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module benchmark_8bshift $end
$var reg 8 ! i[7:0] $end
$var reg 8 " o[7:0] $end
$var reg 1 # i_shift_in $end
$var reg 1 $ clk $end
$var reg 1 % enable $end
$var reg 2 & sel[1:0] $end
$scope module shift_reg_0 $end
$var reg 8 ' i8[7:0] $end
$var reg 1 ( i8_shift_in $end
$var reg 2 ) sel8[1:0] $end
$var reg 1 * clock8 $end
$var reg 1 + enable8 $end
$var reg 8 , o8[7:0] $end
$var reg 1 - bitcarry1 $end
$var reg 1 . bitcarry2 $end
$var reg 8 / sig[7:0] $end
$scope module bitreg_shift1 $end
$var reg 4 0 i[3:0] $end
$var reg 1 1 i_shift_in $end
$var reg 2 2 sel[1:0] $end
$var reg 1 3 clock $end
$var reg 1 4 enable $end
$var reg 4 5 o[3:0] $end
$var reg 4 6 sig[3:0] $end
$upscope $end
$scope module bitreg_shift2 $end
$var reg 4 7 i[3:0] $end
$var reg 1 8 i_shift_in $end
$var reg 2 9 sel[1:0] $end
$var reg 1 : clock $end
$var reg 1 ; enable $end
$var reg 4 < o[3:0] $end
$var reg 4 = sig[3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00010000 !
b00000000 "
0#
0$
1%
b11 &
b00010000 '
0(
b11 )
0*
1+
b00000000 ,
0-
0.
b00000000 /
b0000 0
01
b11 2
03
14
b0000 5
b0000 6
b0001 7
08
b11 9
0:
1;
b0000 <
b0000 =
#1000000
b00010000 "
1$
1*
b00010000 ,
b00010000 /
13
1:
b0001 <
b0001 =
#2000000
b00010001 !
b00010001 '
b0001 0
#3000000
b00010000 !
0$
b01 &
b00010000 '
b01 )
0*
b0000 0
b01 2
03
b01 9
0:
#4000000
b00100000 "
1$
1*
b00100000 ,
b00100000 /
13
1:
b0010 <
b0010 =
#5000000
#6000000
0$
b10 &
b10 )
0*
b10 2
03
b10 9
0:
#7000000
b00010000 "
1$
1*
b00010000 ,
b00010000 /
13
1:
b0001 <
b0001 =
#8000000
#9000000
0$
b00 &
b00 )
0*
b00 2
03
b00 9
0:
#10000000
1$
1*
13
1:
#11000000
#12000000
b01110000 !
1#
0$
b11 &
b01110000 '
1(
b11 )
0*
b11 2
03
b0111 7
b11 9
0:
#13000000
b10000000 !
b10000000 "
1$
b10000000 '
1*
b10000000 ,
b10000000 /
13
b1000 7
1:
b1000 <
b1000 =
#14000000
b10000100 !
b10000100 '
b0100 0
#15000000
b01110000 !
0$
b10 &
b01110000 '
b10 )
0*
1.
b0000 0
b10 2
03
b0111 7
18
b10 9
0:
#16000000
b10000000 !
b11000000 "
1$
b10000000 '
1*
b11000000 ,
b11000000 /
13
b1000 7
1:
b1100 <
b1100 =
#17000000
#18000000
b01110000 !
0$
b01 &
b01110000 '
b01 )
0*
1-
0.
11
b01 2
03
b0111 7
08
b01 9
0:
#19000000
b10000000 !
b10000001 "
1$
b10000000 '
1*
b10000001 ,
b10000001 /
13
b0001 5
b0001 6
b1000 7
1:
b1000 <
b1000 =
#20000000
#21000000
b01110000 !
0$
b00 &
b01110000 '
b00 )
0*
0-
01
b00 2
03
b0111 7
b00 9
0:
#22000000
b10000000 !
1$
b10000000 '
1*
13
b1000 7
1:
#23000000
#24000000
b00010000 !
b00000000 "
0#
0$
0%
b11 &
b00010000 '
0(
b11 )
0*
0+
b00000000 ,
b00000000 /
b11 2
03
04
b0000 5
b0000 6
b0001 7
b11 9
0:
0;
b0000 <
b0000 =
#25000000
1$
1*
13
1:
#26000000
0$
b01 &
b01 )
0*
b01 2
03
b01 9
0:
#27000000
1$
1*
13
1:
#28000000
0$
b10 &
b10 )
0*
b10 2
03
b10 9
0:
#29000000
1$
1*
13
1:
#30000000
0$
b00 &
b00 )
0*
b00 2
03
b00 9
0:
#31000000
1$
1*
13
1:
#32000000
b01110000 !
1#
0$
b11 &
b01110000 '
1(
b11 )
0*
b11 2
03
b0111 7
b11 9
0:
#33000000
b10000000 !
1$
b10000000 '
1*
13
b1000 7
1:
#34000000
b01110000 !
0$
b10 &
b01110000 '
b10 )
0*
1.
b10 2
03
b0111 7
18
b10 9
0:
#35000000
b10000000 !
1$
b10000000 '
1*
13
b1000 7
1:
#36000000
b01110000 !
0$
b01 &
b01110000 '
b01 )
0*
1-
0.
11
b01 2
03
b0111 7
08
b01 9
0:
#37000000
b10000000 !
1$
b10000000 '
1*
13
b1000 7
1:
#38000000
b01110000 !
0$
b00 &
b01110000 '
b00 )
0*
0-
01
b00 2
03
b0111 7
b00 9
0:
#39000000
b10000000 !
1$
b10000000 '
1*
13
b1000 7
1:
#40000000
